name: Deploy WebGL via Pages Artifact

on:
  repository_dispatch:
    types: [deploy_from_source]

permissions:
  pages: write
  id-token: write
  contents: read

concurrency:
  group: pages-deploy
  cancel-in-progress: true

env:
  SOURCE_REPO: ${{ secrets.SOURCE_REPO }} # 예: jark0213/DungeonDIce_MockUp_UnityFIle

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Validate payload
        run: |
          test -n "${{ github.event.client_payload.run_id }}" || { echo "run_id missing"; exit 1; }
          test -n "${{ github.event.client_payload.artifact }}" || { echo "artifact name missing"; exit 1; }
          echo "run_id=${{ github.event.client_payload.run_id }}"
          echo "artifact=${{ github.event.client_payload.artifact }}"
          echo "source_repo=$SOURCE_REPO"

      - name: Download build artifact from source repo
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.client_payload.artifact }}
          path: site
          repository: ${{ env.SOURCE_REPO }}
          run-id: ${{ github.event.client_payload.run_id }}
          # 소스 리포가 private이면 아래 줄을 주석 해제 + 시크릿 추가
          github-token: ${{ secrets.SOURCE_READ_TOKEN }}

      - name: Verify site folder
        run: |
          test -f "site/index.html" || { echo "::error::site/index.html missing"; ls -R site || true; exit 1; }
          du -sh site || true
          ls -lah site/Build || true

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
