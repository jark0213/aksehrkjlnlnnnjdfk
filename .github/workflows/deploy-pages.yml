name: Deploy WebGL via Pages Artifact

on:
  push:
    branches: [ main ]   # Repo A가 실제 푸시하는 브랜치와 일치
  workflow_dispatch:      # (선택) 수동 실행도 허용

permissions:
  pages: write
  id-token: write
  contents: read
  actions: read

concurrency:
  group: pages-deploy
  cancel-in-progress: true

env:
  SOURCE_REPO: ${{ secrets.SOURCE_REPO }}   # 예: jark0213/DungeonDIce_MockUp_UnityFIle
  ARTIFACT_NAME: ${{ github.event.client_payload.artifact }}
  SOURCE_RUN_ID: ${{ github.event.client_payload.run_id }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      # ✅ Pages 설정 (필수)
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      # ✅ 배포 (id 필요)
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Notify Discord (from deploy-pages)
        if: always()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          STATUS: ${{ job.status }}
          PAGE_URL: ${{ steps.deployment.outputs.page_url }}
        run: |
          if [ -z "${DISCORD_WEBHOOK_URL:-}" ]; then
            echo "::warning::No DISCORD_WEBHOOK_URL; skipping"
            exit 0
          fi
          EMOJI=$([ "$STATUS" = "success" ] && echo "✅" || echo "❌")
          MSG="$EMOJI Pages deployment $STATUS\n🔗 ${PAGE_URL:-N/A}"
          PAYLOAD=$(jq -Rn --arg c "$MSG" '{content:$c}')
          curl -sS -H "Content-Type: application/json" -X POST -d "$PAYLOAD" "$DISCORD_WEBHOOK_URL" || true

      - name: Delete Pages artifact via REST API
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          REPO="${{ github.repository }}"
          RUN="${{ github.run_id }}"
          curl -sS -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github+json" \
               "https://api.github.com/repos/$REPO/actions/runs/$RUN/artifacts" > artifacts.json
          IDS=$(jq -r '.artifacts[] | select(.name=="github-pages") | .id' artifacts.json)
          for id in $IDS; do
            echo "Deleting artifact id=$id"
            curl -sS -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" \
                 -H "Accept: application/vnd.github+json" \
                 "https://api.github.com/repos/$REPO/actions/artifacts/$id"
          done
